name: Linting
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  tools:
    name: Get Tool tool-versions
    runs-on: ubuntu-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.8
        id: tool-versions
    outputs:
      golangci-lint-version: ${{ steps.tool-versions.outputs.golangci-lint_version }}

  golangci:
    name: Linting
    runs-on: ubuntu-latest
    needs: [tools]
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          check-latest: true
      - name: golangci-lint ${{ needs.tools.outputs.golangci-lint-version }}
        ##
        # XXX: change this to the official action once multiple --out-format args are supported.
        # See: https://github.com/golangci/golangci-lint-action/issues/612
        ##
        uses: smartcontractkit/golangci-lint-action@54ab6c5f11d66a92d14c3f7cc41ea13f676644bd # feature/multiple-output-formats-backup
        with:
          version: v${{ needs.tools.outputs.golangci-lint-version }}
          allow-extra-out-format-args: true
          args: --out-format checkstyle:golangci-lint-report.xml
      - name: Print lint report artifact
        if: always()
        run: test -f golangci-lint-report.xml || true
      - name: Store lint report artifact
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: golangci-lint-report
          path: golangci-lint-report.xml

  vulnerabilities-check:
    name: Check for Vulnerabilities
    runs-on: ubuntu-latest
    needs: [tools]
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          check-latest: true
      - name: Write Go List
        run: go list -json -deps ./... > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@main

  sonarqube:
    name: SonarQube Analysis
    needs: [golangci]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # fetches all history for all tags and branches to provide more metadata for sonar reports
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a # v1.2.0
        with:
          args: >
            -Dsonar.go.golangci-lint.reportPaths=golangci-lint-report/golangci-lint-report.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
