name: test
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16]
    runs-on: [self-hosted, sdlc-ghr-prod]
    container:
      image: golang:${{ matrix.go-version }}-bullseye
    env:
      KUBECONFIG: /tmp/KUBECONFIG
      CGO_ENABLED: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install AWS CLI
        run: |
         apt-get update
         apt-get install unzip
         wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -O awscliv2.zip 
         unzip awscliv2.zip 
         rm -R awscliv2.zip 
         ./aws/install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Prepare KUBECONFIG
        run: echo "${{ secrets.KUBECONFIG }}" >> /tmp/KUBECONFIG
      - name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/ginkgo
      - name: Download Go Vendor Packages
        run: go mod download
      - name: Run Tests
        run: |
         export PATH=$PATH:$(go env GOPATH)/bin
         ginkgo -r -p -keepGoing --trace --randomizeAllSpecs --cover --progress --coverprofile=coverage.out ./...
      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/logs/tests-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: test-logs
          path: ./logs
      - name: Convert coverage to lcov 
        uses: jandelgado/gcov2lcov-action@v1.0.5
        if: always()
      - name: Report code coverage
        uses: romeovs/lcov-reporter-action@v0.2.21
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage.lcov

