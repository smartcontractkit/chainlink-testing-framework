name: Parrot Release

on:
  push:
    tags:
      - parrot/v*

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_PUBLISH_ECR_ROLE_ARN }}
          role-duration-seconds: 1800
          mask-aws-account-id: true
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          mask-password: 'true'
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: kalverra
          password: ${{ secrets.KALVERRA_DOCKER_PASSWORD }}
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: ./parrot/go.mod
      - name: Goreleaser Release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> v2"
          args: release --clean -f ./parrot/.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          IMAGE_PREFIX: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_TAG: ${{ github.ref_name }}
          DOCKER_USERNAME: kalverra
          DOCKER_PASSWORD: ${{ secrets.KALVERRA_DOCKER_PASSWORD }}
