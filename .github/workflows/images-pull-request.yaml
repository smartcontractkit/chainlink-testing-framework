name: Docker Images - Pull Request
on: pull_request

env:
  REGISTRY_ALIAS: w0i8p0z9
permissions:
  id-token: write
  contents: read

jobs:
  #  hadolint:
  #    name: Lint Dockerfiles
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
  #      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf #v3.1.0
  #        with:
  #          recursive: true

  check-modified:
    name: Check modified
    runs-on: ubuntu-latest
    outputs:
      dockerfile_dirs: ${{ steps.list_dockerfile_dirs.outputs.dirs }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Get changed files
        id: get_changed_files
        uses: tj-actions/changed-files@0874344d6ebbaa00a27da73276ae7162fadcaf69 # v44.3.0
        with:
          fetch_depth: 1000

      - name: List changed directories with Docker files
        id: list_dockerfile_dirs
        run: .github/ci-scripts/create-image-matrix.sh
        env:
          CHANGED_FILES: ${{ steps.get_changed_files.outputs.all_modified_files }}

  build-amd64:
    name: Build & Push AMD64 Image
    runs-on: ubuntu-latest # Ensure it supports x86_64
    environment: ecr-prod-publish
    needs: [check-modified]
    strategy:
      matrix: ${{ fromJson(needs.check-modified.outputs.dockerfile_dirs) }}
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_PUBLISH_ECR_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: 'public'
          registries: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push AMD64 Image
        uses: docker/build-push-action@v5
        with:
          context: ./images/${{ matrix.image }}/
          file: ./images/${{ matrix.image }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }}-amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    name: Build & Push Arm64 Image
    runs-on: ubuntu-24.04-arm # Ensure it supports x86_64
    environment: ecr-prod-publish
    needs: [check-modified]
    strategy:
      matrix: ${{ fromJson(needs.check-modified.outputs.dockerfile_dirs) }}
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_PUBLISH_ECR_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: 'public'
          registries: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Arm64 Image
        uses: docker/build-push-action@v5
        with:
          context: ./images/${{ matrix.image }}/
          file: ./images/${{ matrix.image }}/Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }}-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    name: Create & Push Multi-Arch Manifest
    runs-on: ubuntu-latest
    environment: ecr-prod-publish
    strategy:
      matrix: ${{ fromJson(needs.check-modified.outputs.dockerfile_dirs) }}
      fail-fast: false
    needs: [check-modified, build-amd64, build-arm64]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_PUBLISH_ECR_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: 'public'
          registries: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}

      - name: Create and Push Multi-Architecture Manifest
        run: |
          docker manifest create ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }} \
            --amend ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }}-amd64 \
            --amend ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }}-arm64

          docker manifest push ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.image }}:sha-${{ github.sha }}
