name: (k8s package) E2E tests
on:
  pull_request:

concurrency:
  group: e2e-tests-k8s-${{ github.ref }}
  cancel-in-progress: true

env:
  INTERNAL_DOCKER_REPO: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com
  ENV_JOB_IMAGE: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink-testing-framework-tests:ci.${{ github.sha }}
  BASE_IMAGE_NAME: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/test-base-image:ci.${{ github.sha }}
  CHAINLINK_IMAGE: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
  CHAINLINK_VERSION: develop
  SELECTED_NETWORKS: SIMULATED
  CHAINLINK_COMMIT_SHA: ${{ github.sha }}
  CHAINLINK_ENV_USER: ${{ github.actor }}
  TEST_LOG_LEVEL: debug

jobs:
  build_tests:
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Build Base Image
        uses: smartcontractkit/chainlink-github-actions/docker/build-push@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          tags: ${{ env.BASE_IMAGE_NAME }}
          file: k8s/Dockerfile.base
          AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      - name: Base Image Built
        run: |
          # shellcheck disable=SC2086
          cat <<EOT >>$GITHUB_STEP_SUMMARY
          ### chainlink image tag used for this test run :link: => \`${{ env.CHAINLINK_VERSION }}\`
          ### test-base-image image tag for this test run :ship: => \`ci.${{ github.sha }}\`
          EOT
      - name: Build Test Runner
        uses: smartcontractkit/chainlink-github-actions/docker/build-push@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          tags: ${{ env.ENV_JOB_IMAGE }}
          file: k8s/Dockerfile
          build-args: |
            BASE_IMAGE=${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/test-base-image
            IMAGE_VERSION=ci.${{ github.sha }}
          AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      - name: Test Image Built
        run: |
          # shellcheck disable=SC2086
          cat <<EOT >>$GITHUB_STEP_SUMMARY
          ### chainlink-testing-framework-tests image tag for this test run :ship: -> \`ci.${{ github.sha }}\`
          EOT
  e2e_tests:
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      id-token: write
      contents: read
    env:
      TEST_SUITE: local-runner
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Load Nix
        run: nix develop -c sh -c "go mod download"
      - name: Setup environment
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/setup-run-tests-environment@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          go_mod_path: go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          go_necessary: false
      - name: Run Tests
        env:
          LOCAL_CHARTS: true
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          cl_repo: ${{ env.CHAINLINK_IMAGE }}
          cl_image_tag: ${{ env.CHAINLINK_VERSION }}
          test_command_to_run: |
            unset ENV_JOB_IMAGE
            nix develop -c sh -c "make k8s_test_e2e_ci"
          artifacts_location: ./e2e/logs
          publish_check_name: E2E Test Results
          token: ${{ secrets.GITHUB_TOKEN }}
          go_mod_path: go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          run_setup: false
      - name: Upload test log
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: failure()
        with:
          name: test-log
          path: /tmp/gotest.log

  e2e_remote_runner_tests:
    runs-on: ubuntu-latest
    environment: integration
    needs: [build_tests]
    permissions:
      id-token: write
      contents: read
    env:
      TEST_SUITE: remote-runner
      TEST_TRIGGERED_BY: chainlink-testing-framework-remote-runner-ci
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Load Nix
        run: nix develop -c sh -c "go mod download"
      - name: Setup environment
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/setup-run-tests-environment@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          go_mod_path: go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          go_necessary: false
      - name: Run Remote Runner Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          cl_repo: ${{ env.CHAINLINK_IMAGE }}
          cl_image_tag: ${{ env.CHAINLINK_VERSION }}
          test_command_to_run: |
            nix develop -c sh -c "make k8s_test_e2e_ci_remote_runner"
          artifacts_location: ./k8s/logs
          publish_check_name: E2E Remote Runner Test Results
          token: ${{ secrets.GITHUB_TOKEN }}
          go_mod_path: go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          run_setup: false
      - name: Upload test log
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: failure()
        with:
          name: remote-runner-test-log
          path: /tmp/remoterunnergotest.log
