apiVersion: apps/v1
kind: Deployment 
metadata:
  name: {{ .Release.Name }}-{{ .Values.prysm.beacon.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.prysm.beacon.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.prysm.beacon.name }}
    spec:
      volumes:
      - name: {{ .Release.Name }}-chain-state
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-{{ .Values.storage.claim }}
      - name: {{ .Release.Name }}-geth-config
        configMap:
          name: {{ .Release.Name }}-geth-config   
      - name: {{ .Release.Name }}-prysm-config
        configMap:
          name: {{ .Release.Name }}-prysm-config                  
      containers:
        - name: {{ .Values.prysm.beacon.name }}
          image: {{ .Values.prysm.beacon.image.repository }}:{{ .Values.prysm.beacon.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - "--datadir=/data/consensus/beacondata"
            - "--min-sync-peers=0"
            - "--genesis-state={{ .Values.prysm.shared.genesisFile }}"
            - "--bootstrap-node="
            - "--chain-config-file={{ .Values.prysm.shared.configFile }}"
            - "--contract-deployment-block=0"
            - "--chain-id={{ .Values.general.networkId }}"
            - "--rpc-host=0.0.0.0"
            - "--grpc-gateway-host=0.0.0.0"
            - "--execution-endpoint=http://{{ .Release.Name }}-{{ .Values.geth.name }}-svc:{{ .Values.geth.ports.execution }}"
            - "--accept-terms-of-use"
            - "--jwt-secret={{ .Values.shared.jwtSecretFile }}"
            - "--suggested-fee-recipient={{ .Values.prysm.shared.feeRecipent }}"
            - "--minimum-peers-per-subnet=0"
            - "--enable-debug-rpc-endpoints"           
            - "--force-clear-db"
            - "--interop-eth1data-votes"
          resources:
            requests:
              memory: {{ .Values.prysm.beacon.resources.requests.memory }}
              cpu: {{ .Values.prysm.beacon.resources.requests.cpu }}
            limits:
              memory: {{ .Values.prysm.beacon.resources.limits.memory }}
              cpu: {{ .Values.prysm.beacon.resources.limits.cpu }}
          ports:
            - name: query-rpc
              containerPort: {{ .Values.prysm.beacon.ports.query }}               
            - name: node-rpc
              containerPort: {{ .Values.prysm.beacon.ports.node }}    
            - name: status
              containerPort: {{ .Values.prysm.beacon.ports.status }}                              
          volumeMounts:               
            - name: {{ .Release.Name }}-chain-state
              mountPath: /data 
            - name: {{ .Release.Name }}-geth-config
              mountPath: {{ .Values.shared.jwtSecretFile }}
              subPath: jwtsecret  
            - name: {{ .Release.Name }}-prysm-config
              mountPath: {{ .Values.prysm.shared.configFile }}
              subPath: config.yml         
          # for some reason doesn't work, the pod is never ready :/                         
          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
          #   timeoutSeconds: 120
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 5         
          #   timeoutSeconds: 5                              
          #   failureThreshold: 2
      initContainers:
        - name: {{ .Release.Name }}-wait-for-geth
          image: {{ .Values.busybox.image.repository }}:{{ .Values.busybox.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }} 
          command:
          - "/bin/sh"
          - "-c"
          - >
            timeout 900 sh -c '
              start_time=$(date +%s)
              while ! nc -z -v {{ .Release.Name }}-{{ .Values.geth.name }}-svc {{ .Values.geth.ports.execution }}; do
                current_time=$(date +%s)
                elapsed_time=$((current_time - start_time))
                remaining_time=$((900 - elapsed_time))
                echo "Waiting for Geth (Remaining time: $remaining_time seconds)..."
                sleep 2
              done'