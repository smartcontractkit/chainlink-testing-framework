apiVersion: apps/v1
kind: Deployment #StatefulSet?
metadata:
  name: {{ .Release.Name }}-{{ .Values.prysm.validator.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.prysm.validator.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.prysm.validator.name }}
    spec:
      volumes:
      - name: {{ .Release.Name }}-chain-state
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-{{ .Values.storage.claim }}      
      - name: {{ .Release.Name }}-prysm-config
        configMap:
          name: {{ .Release.Name }}-prysm-config                  
      containers:
        - name: {{ .Values.prysm.validator.name }}
          image: {{ .Values.prysm.validator.image.repository }}:{{ .Values.prysm.validator.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
          - "--beacon-rpc-provider={{ .Release.Name }}-{{ .Values.prysm.beacon.name }}-svc:{{ .Values.prysm.beacon.ports.node }}"
          - "--datadir=/data/consensus/validatordata"
          - "--accept-terms-of-use"
          - "--interop-num-validators={{ .Values.prysm.shared.validators }}"
          - "--interop-start-index=0"
          - "--chain-config-file={{ .Values.prysm.shared.configFile }}"
          - "--force-clear-db"
          - "--suggested-fee-recipient={{ .Values.prysm.shared.feeRecipent }}"
          resources:
            requests:
              memory: {{ .Values.prysm.validator.resources.requests.memory }}
              cpu: {{ .Values.prysm.validator.resources.requests.cpu }}
            limits:
              memory: {{ .Values.prysm.validator.resources.limits.memory }}
              cpu: {{ .Values.prysm.validator.resources.limits.cpu }}
          volumeMounts:               
            - name: {{ .Release.Name }}-chain-state
              mountPath: /data 
            - name: {{ .Release.Name }}-prysm-config
              mountPath: {{ .Values.prysm.shared.configFile }}
              subPath: config.yml                                 
      initContainers:
        - name: {{ .Release.Name }}-wait-for-geth
          image: {{ .Values.busybox.image.repository }}:{{ .Values.busybox.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }} 
          command:
            - "/bin/sh"
            - "-c"
            - >
              timeout 900 sh -c '
                start_time=$(date +%s)
                while ! nc -z -v {{ .Release.Name }}-{{ .Values.geth.name }}-svc {{ .Values.geth.ports.execution }}; do
                  current_time=$(date +%s)
                  elapsed_time=$((current_time - start_time))
                  remaining_time=$((900 - elapsed_time))
                  echo "Waiting for Geth (Remaining time: $remaining_time seconds)..."
                  sleep 2
                done'