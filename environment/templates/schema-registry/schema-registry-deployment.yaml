metadata:
  name: cp-schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-schema-registry
  template:
    objectmeta:
      labels:
        app: cp-schema-registry
    spec:
      containers:
        - name: cp-schema-registry
          env:
            - name: SCHEMA_REGISTRY_DEBUG
              value: "true"
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: cp-schema-registry
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: PLAINTEXT://{{ .Values.KafkaGroup.kafka.clusterURL }}
            - name: SCHEMA_REGISTRY_LISTENERS
              value: http://0.0.0.0:8081
          image: {{ .Config.Apps.CpSchemaRegistry.Image }}:{{ .Config.Apps.CpSchemaRegistry.Version }}
          ports:
            - containerPort: 8081
          resources:
            requests:
              memory: {{ .Config.Apps.CpSchemaRegistry.Requests.Memory }}
              cpu: {{ .Config.Apps.CpSchemaRegistry.Requests.Cpu }}
            limits:
              memory: {{ .Config.Apps.CpSchemaRegistry.Limits.Memory }}
              cpu: {{ .Config.Apps.CpSchemaRegistry.Limits.Cpu }}
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 50
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 25
            periodSeconds: 5