metadata:
  generateName: chainlink-node-
spec:
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      volumes:
      - name: node-secrets-volume
        secret:
          secretName: {{ .Manifest.Secret.ObjectMeta.Name }}
      containers:
      - name: node
        image: {{ .Config.Apps.Chainlink.Image }}:{{ .Config.Apps.Chainlink.Version }}
        imagePullPolicy: IfNotPresent
        args:
        - node
        - start
        - -d
        - -p
        - /etc/node-secrets-volume/node-password
        - -a
        - /etc/node-secrets-volume/apicredentials
        - --vrfpassword=/etc/node-secrets-volume/apicredentials
        ports:
        - name: access
          containerPort: {{ .Values.chainlinkCluster.chainlink.webPort }}
        - name: p2p
          containerPort: {{ .Values.chainlinkCluster.chainlink.p2pPort }}
        env:
        - name: DATABASE_URL
          value: {{ next .Values.DependencyGroup.dbURLs }}/chainlink?sslmode=disable
        - name: DATABASE_NAME
          value: chainlink
        - name: ETH_URL
          value: {{ if .Values.DependencyGroup.evm.clusterURL }}{{ .Values.DependencyGroup.evm.clusterURL }}{{ else }}{{ .Network.URL }}{{ end }}
        - name: ETH_CHAIN_ID
          value: {{ .Network.ChainID }}
        - name: ALLOW_ORIGINS
          value: '*'
        - name: CHAINLINK_DEV
          value: "true"
        - name: CHAINLINK_PGPASSWORD
          value: node
        - name: CHAINLINK_PORT
          value: "6688"
        - name: CHAINLINK_TLS_PORT
          value: "0"
        - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
          value: "true"
        - name: ENABLE_BULLETPROOF_TX_MANAGER
          value: "true"
        - name: FEATURE_OFFCHAIN_REPORTING
          value: "true"
        - name: JSON_CONSOLE
          value: "false"
        - name: LOG_LEVEL
          value: info
        - name: MAX_EXPORT_HTML_THREADS
          value: "2"
        - name: MINIMUM_CONTRACT_PAYMENT
          value: "0"
        - name: OCR_TRACE_LOGGING
          value: "true"
        - name: P2P_LISTEN_IP
          value: 0.0.0.0
        - name: P2P_LISTEN_PORT
          value: "6690"
        - name: ROOT
          value: ./clroot
        - name: SECURE_COOKIES
          value: "false"
        - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
          value: "5000"
        # keeper https://github.com/smartcontractkit/chainlink/wiki/How-to-Run-Keeper-Jobs
        - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
          value: "1"
        - name: KEEPER_REGISTRY_SYNC_INTERVAL
          value: "5s"
        - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
          value: "1"
        - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
          value: "200000"
        - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
          value: "150000"
        {{ if (present "explorer" .Values.DependencyGroup) }}
        - name: EXPLORER_URL
          value: {{ .Values.DependencyGroup.explorer.clusterURL }}
        {{ with $x := next .Values.DependencyGroup.explorer.keys }}
        - name: EXPLORER_ACCESS_KEY
          value: {{ $x.AccessKey }}
        - name: EXPLORER_SECRET
          value: {{ $x.Secret }}
        {{ end }}
        {{ end }}
        volumeMounts:
        - name: node-secrets-volume
          readonly: false
          mountPath: /etc/node-secrets-volume/
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.chainlinkCluster.chainlink.webPort }}
          initialDelaySeconds: 90
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.chainlinkCluster.chainlink.webPort }}
          initialDelaySeconds: 50
          periodSeconds: 5
        resources:
          requests:
            memory: {{ .Config.Apps.Chainlink.Requests.Memory }}
            cpu: {{ .Config.Apps.Chainlink.Requests.Cpu }}
          limits:
            memory: {{ .Config.Apps.Chainlink.Limits.Memory }}
            cpu: {{ .Config.Apps.Chainlink.Limits.Cpu }}
