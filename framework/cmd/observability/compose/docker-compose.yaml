services:
  tempo:
    image: grafana/tempo:2.3.1
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
#      - "5317:4317"   # otlp grpc
#      - "5318:4318"   # otlp http
      - "9411:9411"   # zipkin
      - "14268:14268" # jaeger ingest
      - "14250:14250" # jaeger grpc
      - "55680:55680" # otlp http legacy
  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel.yaml:/etc/otel/config.yaml
    command:
      - '--config=/etc/otel/config.yaml'
    ports:
      - "4317:4317" # grpc
      - "4318:4318" # http
      - "8889:8889"  # Prometheus scrape target
    depends_on:
      - loki
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    container_name: cadvisor
    ports:
      - '8085:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro # Docker container data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    privileged: true

  prometheus:
    image: prom/prometheus:latest
    user: '0:0'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9099:9090'

  loki:
    image: grafana/loki:3.4.1
    volumes:
      - ./loki-config.yaml:/etc/loki/mounted-config.yaml
      - ./conf/provisioning/rules/rules.yml:/etc/loki/rules/fake/rules.yml
      - loki_data:/loki
    ports:
      - '3030:3100'
    command: -config.file=/etc/loki/mounted-config.yaml -log.level=info -ruler.storage.local.directory=/etc/loki/rules

  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_home:/usr/share/grafana
      - grafana_logs:/var/log/grafana
      - grafana_plugins:/var/lib/grafana/plugins
      - ./conf/grafana.ini:/etc/grafana/grafana.ini
      - ./conf/provisioning:/etc/grafana/provisioning
      - ./conf/provisioning/dashboards/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./conf/provisioning/dashboards/wasp/wasp.json:/var/lib/grafana/dashboards/wasp/wasp.json
      - ./conf/provisioning/dashboards/pg/pg.json:/var/lib/grafana/dashboards/pg/pg.json
      - ./conf/provisioning/dashboards/cadvisor/cadvisor.json:/var/lib/grafana/dashboards/cadvisor/cadvisor.json
      - ./conf/provisioning/dashboards/clnode-errors/errors.json:/var/lib/grafana/dashboards/clnode-errors/errors.json
      - ./conf/provisioning/dashboards/workflow-engine/engine.json:/var/lib/grafana/dashboards/workflow-engine/engine.json
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
      - loki
      - tempo

  pyroscope:
    image: 'pyroscope/pyroscope:latest'
    ports:
      - '4040:4040'
    command:
      - 'server'

  postgres_exporter_0:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_0
    environment:
      - DATA_SOURCE_NAME=postgresql://chainlink:thispasswordislongenough@host.docker.internal:13000/db_0?sslmode=disable
    ports:
      - '9300:9187'
    restart: unless-stopped

  postgres_exporter_1:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_1
    environment:
      - DATA_SOURCE_NAME=postgresql://chainlink:thispasswordislongenough@host.docker.internal:13000/db_1?sslmode=disable
    ports:
      - '9301:9187'
    restart: unless-stopped

  postgres_exporter_2:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_2
    environment:
      - DATA_SOURCE_NAME=postgresql://chainlink:thispasswordislongenough@host.docker.internal:13000/db_2?sslmode=disable
    ports:
      - '9302:9187'
    restart: unless-stopped

  postgres_exporter_3:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_3
    environment:
      - DATA_SOURCE_NAME=postgresql://chainlink:thispasswordislongenough@host.docker.internal:13000/db_3?sslmode=disable
    ports:
      - '9303:9187'
    restart: unless-stopped

  postgres_exporter_4:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_4
    environment:
      - DATA_SOURCE_NAME=postgresql://chainlink:thispasswordislongenough@host.docker.internal:13000/db_4?sslmode=disable
    ports:
      - '9304:9187'
    restart: unless-stopped

volumes:
  loki_data:
  grafana_data:
  grafana_home:
  grafana_logs:
  grafana_plugins:
  tempo_data:
